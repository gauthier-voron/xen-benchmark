#!/usr/bin/perl -wl
use strict;


sub usage
{
    return <<"EOF";
usage: $0 REGEX... < FILE

Filter the columns on the input data FILE, only retaining the ones which
match the given REGEXs.
For instance, given the file "foo":

  \$ cat foo
  #col0 col1 col2
  aab 1 2
  aac 3 4
  aka 5 6
  cbc 7 8
  ijk 9 10

To retain only the columns ending with a '2', you can do:

  \$ $0 '2$' < foo
  #col0 col2
  aab 2
  aac 4
  aka 6
  cbc 8
  ijk 10

Note that the first column is always keeped since it is the 'key' column.
EOF
}


my $i;
my $line;
my $column;
my @fields;
my @columns;


if (scalar @ARGV > 0 && ($ARGV[0] eq '-h' || $ARGV[0] eq '-?'
			 || $ARGV[0] eq '--help')) {
    printf usage();
    exit 0;
}

if (scalar @ARGV <= 0) {
    printf STDERR usage();
    exit 1;
}


# First line operation
# Store in @columns, the column numbers of the ones to keep and print them.
# Always keep the column 0.

$line = <STDIN>;
exit 0 unless (defined $line);
@fields = split /\s+/, $line;

push @columns, 0;
printf (shift @fields);


# For each column which match one of the regex, keep it and print it.

$i = 1;
foreach $column (@fields) {
    foreach (@ARGV) {
	if ($column =~ /$_/) {
	    push @columns, $i;
	    printf ' ' . $column;
	    last;
	}
    }
    $i++;
}
print '';


# Now we have all the column number to keep, so for each line in the data file,
# just split it in fields and print only the ones with the right column number.

while (defined ($line = <STDIN>)) {
    @fields = split /\s+/, $line;
    (printf $fields[$_] . ' ') foreach (@columns);
    print '';
}
